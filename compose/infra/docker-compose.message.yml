# 消息服务 - Kafka
services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    networks:
      - backend
    restart: always
    volumes:
      # 数据持久化
      - kafka_data:/bitnami/kafka
      # 日志
      - app_logs:/opt/bitnami/kafka/logs
    environment:
      # Kafka 配置
      - KAFKA_CFG_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT:-zookeeper:2181}
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      # JVM 设置
      - KAFKA_HEAP_OPTS=${KAFKA_HEAP_OPTS:--Xmx512m -Xms256m}
    ulimits:
      nofile: 200000
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.2'
    healthcheck:
      test: ["CMD", "/opt/bitnami/kafka/bin/kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "infra.service=message-queue"
      - "infra.category=messaging"

  # 可选：Kafka UI 管理界面
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - backend
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=infrastructure
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "infra.service=kafka-management"
      - "infra.category=messaging"
    profiles:
      - "management"  # 仅在需要管理界面时启动

networks:
  backend:
    external: true
    name: infra-backend

volumes:
  kafka_data:
    external: true
    name: infra_kafka_data
  app_logs:
    external: true
    name: infra_app_logs