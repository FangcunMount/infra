# 存储服务 - 数据库和缓存
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    networks:
      - backend
    restart: always
    volumes:
      # 数据持久化
      - mysql_data:/var/lib/mysql
      # 配置文件 (使用项目内配置)
      - ./components/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      # 日志
      - app_logs:/data/log/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ulimits:
      nofile: 100000
    deploy:
      resources:
        limits:
          memory: 1400M
        reservations:
          memory: 1200M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    labels:
      - "infra.service=database"
      - "infra.category=storage"

  redis:
    image: redis:7
    container_name: redis
    networks:
      - backend
    restart: always
    volumes:
      # 数据持久化
      - redis_data:/data
      # 配置文件 (使用项目内配置)
      - ./components/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      # 日志
      - app_logs:/data/log/redis
    command: >
      redis-server /usr/local/etc/redis/redis.conf
      --requirepass "${REDIS_PASSWORD}"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ulimits:
      nofile: 100000
    deploy:
      resources:
        limits:
          memory: 450M
        reservations:
          memory: 384M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "infra.service=cache"
      - "infra.category=storage"

  mongo:
    image: mongo:7
    container_name: mongo
    networks:
      - backend
    restart: always
    volumes:
      # 数据持久化
      - mongo_data:/data/db
      # 配置文件 (使用项目内配置)
      - ./components/mongo/mongod.conf:/etc/mongod.conf:ro
      # 日志
      - app_logs:/data/log/mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    command: mongod --config /etc/mongod.conf
    ulimits:
      nofile: 100000
    deploy:
      resources:
        limits:
          memory: 1000M
        reservations:
          memory: 800M
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "infra.service=document-db"
      - "infra.category=storage"

networks:
  backend:
    external: true
    name: infra-backend

volumes:
  mysql_data:
    external: true
    name: infra_mysql_data
  redis_data:
    external: true
    name: infra_redis_data
  mongo_data:
    external: true
    name: infra_mongo_data
  app_logs:
    external: true
    name: infra_app_logs