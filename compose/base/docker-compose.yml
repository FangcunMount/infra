# 基础服务定义 - 不包含端口映射和敏感配置
# 通过 override 文件来配置节点特定的参数

services:
  nginx:
    image: nginx:1.27
    container_name: nginx
    networks:
      - frontend
      - backend
    restart: always
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    ulimits:
      nofile: 100000
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  mysql:
    image: mysql:8.0
    container_name: mysql
    networks:
      - backend
    restart: always
    ulimits:
      nofile: 100000
    deploy:
      resources:
        limits:
          memory: 1400M
        reservations:
          memory: 1200M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  redis:
    image: redis:7
    container_name: redis
    networks:
      - backend
    restart: always
    ulimits:
      nofile: 100000
    deploy:
      resources:
        limits:
          memory: 450M
        reservations:
          memory: 384M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:7
    container_name: mongo
    networks:
      - backend
    restart: always
    ulimits:
      nofile: 100000
    deploy:
      resources:
        limits:
          memory: 1000M
        reservations:
          memory: 800M
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    networks:
      - backend
    restart: always
    ulimits:
      nofile: 200000
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.2'
    healthcheck:
      test: ["CMD", "/opt/bitnami/kafka/bin/kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    networks:
      - backend
    restart: always
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.2'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s

networks:
  frontend:
    name: infra-frontend
    driver: bridge
  backend:
    name: infra-backend
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# 数据卷定义
volumes:
  mysql_data:
    external: true
    name: infra_mysql_data
  redis_data:
    external: true
    name: infra_redis_data
  mongo_data:
    external: true
    name: infra_mongo_data
  kafka_data:
    external: true
    name: infra_kafka_data
  jenkins_data:
    external: true
    name: infra_jenkins_data
  nginx_logs:
    external: true
    name: infra_nginx_logs
  app_logs:
    external: true
    name: infra_app_logs