# Jenkins 管理界面代理配置
# 通过 Nginx 代理 Jenkins，提供 SSL 终结和访问控制

upstream jenkins_backend {
    server jenkins:8080 max_fails=3 fail_timeout=30s;
    keepalive 8;
}

# HTTP 重定向到 HTTPS
server {
    listen 80;
    server_name jenkins.local localhost;
    
    # 健康检查端点（不重定向）
    location /health {
        proxy_pass http://jenkins_backend/login;
        access_log off;
    }
    
    # 其他请求重定向到 HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Jenkins HTTPS 代理
server {
    listen 443 ssl http2;
    server_name jenkins.local localhost;
    
    # SSL 配置
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 安全头部
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Jenkins 特殊配置
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # 主要代理配置
    location / {
        proxy_pass http://jenkins_backend;
        
        # 基本代理头部
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Jenkins 特定头部
        proxy_set_header X-Jenkins-CLI-Port 50000;
        
        # WebSocket 支持（用于实时日志等功能）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # 缓冲和超时设置
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        
        # 避免 Jenkins 重定向问题
        proxy_redirect off;
    }
    
    # CLI 和 API 端点
    location /cli {
        proxy_pass http://jenkins_backend/cli;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CLI 需要较长超时
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
    }
    
    # API 端点优化
    location ~ ^/api/ {
        proxy_pass http://jenkins_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API 调用缓存（适用于只读 API）
        location ~ ^/api/.*/lastBuild {
            proxy_pass http://jenkins_backend;
            proxy_cache nginx_cache;
            proxy_cache_valid 200 60s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    
    # 静态资源缓存
    location ~ \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
        proxy_pass http://jenkins_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # 静态资源缓存
        expires 7d;
        add_header Cache-Control "public, immutable";
        
        # 压缩静态资源
        gzip_static on;
    }
    
    # 健康检查（内部使用）
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# WebSocket 连接升级映射
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}