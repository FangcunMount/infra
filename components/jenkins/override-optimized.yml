# 优化后的 Jenkins Docker Compose 配置
# 网络优化版本：通过 Nginx 代理访问，只保留必要的 Agent 端口

version: '3.9'

services:
  jenkins:
    # 网络配置：只连接到后端网络
    networks:
      - backend
    
    # 端口配置：只暴露 Agent 端口，Web 端口通过 Nginx 代理
    ports:
      # Web 界面通过 Nginx 代理访问，移除直接端口映射
      # - "${JENKINS_HTTP_PORT:-8080}:8080"
      
      # Agent 端口仍需要直接访问（用于构建节点连接）
      - "${JENKINS_AGENT_PORT:-50000}:50000"
    
    # 数据卷配置
    volumes:
      # Jenkins Configuration as Code
      - ./components/jenkins/jenkins.yaml:/var/jenkins_home/casc_configs/jenkins.yaml:ro
      
      # 插件预安装列表
      - ./components/jenkins/plugins.txt:/usr/share/jenkins/ref/plugins.txt:ro
      
      # 数据持久化
      - /data/jenkins/jenkins_home:/var/jenkins_home
      
      # 日志目录
      - app_logs:/data/log/jenkins
      
      # Docker socket（用于 Docker 构建）
      - /var/run/docker.sock:/var/run/docker.sock:ro
    
    # 环境变量配置
    environment:
      # CasC 配置路径
      - CASC_JENKINS_CONFIG=/var/jenkins_home/casc_configs/jenkins.yaml
      
      # Jenkins 启动参数
      - JENKINS_OPTS=--logfile=/data/log/jenkins/jenkins.log --httpPort=8080
      
      # JVM 参数
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Xmx${JENKINS_MEMORY:-1024m} -Xms256m
      
      # 安全配置
      - JENKINS_ADMIN_USER=${JENKINS_ADMIN_USER:-admin}
      - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD}
      
      # 网络配置（用于代理后的 URL 生成）
      - JENKINS_URL=https://jenkins.local
      - JENKINS_ROOT_URL=https://jenkins.local
    
    # 健康检查配置
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/login || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    
    # 容器标签（用于服务发现和监控）
    labels:
      - "app.name=jenkins"
      - "app.version=lts"
      - "app.component=ci-cd"
      - "nginx.enable=true"
      - "nginx.upstream=jenkins"
      - "nginx.port=8080"
      - "nginx.domain=jenkins.local"
    
    # 用户和权限配置
    user: root
    
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 1200M
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # 重启策略
    restart: always
    
    # 依赖配置（可选）
    depends_on:
      - nginx

# 网络配置
networks:
  backend:
    external: true
    name: infra-backend