# 优化后的 Jenkins Docker Compose 配置
# 网络优化版本：通过 Nginx 代理访问，只保留必要的 Agent 端口

version: '3.9'

services:
  jenkins:
    image: ${JENKINS_IMAGE:-infra/jenkins:with-make}
    build:
      context: .
      dockerfile: Dockerfile
      args:
        http_proxy: ${JENKINS_BUILD_HTTP_PROXY:-}
        https_proxy: ${JENKINS_BUILD_HTTPS_PROXY:-}
        no_proxy: ${JENKINS_BUILD_NO_PROXY:-}
      extra_hosts:
        - "host.docker.internal:${DOCKER_HOST_GATEWAY:-host-gateway}"
    # 网络配置：只连接到后端网络
    networks:
      - backend
    
    # 端口配置：只暴露 Agent 端口，Web 端口通过 Nginx 代理
    ports:
      # Web 界面通过 Nginx 代理访问，移除直接端口映射
      # - "${JENKINS_HTTP_PORT:-8080}:8080"
      
      # Agent 端口仍需要直接访问（用于构建节点连接）
      - "${JENKINS_AGENT_PORT:-50000}:50000"
    
    # 数据卷配置
    volumes:
      - /data/jenkins/casc_configs:/var/jenkins_home/casc_configs:ro
      - /data/jenkins/jenkins_home/plugins.txt:/usr/share/jenkins/ref/plugins.txt:ro
      - /data/jenkins/jenkins_home:/var/jenkins_home
      - app_logs:/data/log
      - /var/run/docker.sock:/var/run/docker.sock:ro

    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    # 环境变量配置
    environment:
      # CasC 配置路径
      CASC_JENKINS_CONFIG: /var/jenkins_home/casc_configs/jenkins.yaml

      # Jenkins 启动参数
      JENKINS_OPTS: '--logfile=/data/log/jenkins/jenkins.log'

      # JVM 参数
      JAVA_OPTS: '${JENKINS_JAVA_OPTS:-"-Djenkins.install.runSetupWizard=false -Xmx1536m -Xms512m"}'

      # 安全配置
      JENKINS_ADMIN_USER: '${JENKINS_ADMIN_USER:-admin}'
      JENKINS_ADMIN_PASSWORD: '${JENKINS_ADMIN_PASSWORD}'

      # VPN 代理配置（通过宿主机转发）
      HTTP_PROXY: '${JENKINS_RUNTIME_HTTP_PROXY:-http://host.docker.internal:7890}'
      HTTPS_PROXY: '${JENKINS_RUNTIME_HTTPS_PROXY:-http://host.docker.internal:7890}'
      http_proxy: '${JENKINS_RUNTIME_HTTP_PROXY:-http://host.docker.internal:7890}'
      https_proxy: '${JENKINS_RUNTIME_HTTPS_PROXY:-http://host.docker.internal:7890}'
      NO_PROXY: '${JENKINS_RUNTIME_NO_PROXY:-localhost,127.0.0.1,::1,jenkins,host.docker.internal}'
      no_proxy: '${JENKINS_RUNTIME_NO_PROXY:-localhost,127.0.0.1,::1,jenkins,host.docker.internal}'

      # 网络配置（用于代理后的 URL 生成）
      JENKINS_URL: https://jenkins.local
      JENKINS_ROOT_URL: https://jenkins.local
    
    # 健康检查配置
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/login || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    
    # 容器标签（用于服务发现和监控）
    labels:
      - "app.name=jenkins"
      - "app.version=lts"
      - "app.component=ci-cd"
      - "nginx.enable=true"
      - "nginx.upstream=jenkins"
      - "nginx.port=8080"
      - "nginx.domain=jenkins.local"
    
    # 用户和权限配置
    user: root
    
    # 资源限制
    deploy:
      resources:
        limits:
          memory: "2G"
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # 重启策略
    restart: always
    
    # 依赖配置（可选）
    depends_on:
      - nginx

# 网络配置
networks:
  backend:
    external: true
    name: infra-backend