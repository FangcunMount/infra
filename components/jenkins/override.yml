version: '3.9'

services:
  jenkins:
    image: ${JENKINS_IMAGE:-infra/jenkins:with-make}
    build:
      context: .
      dockerfile: Dockerfile
      args:
        http_proxy: ${JENKINS_BUILD_HTTP_PROXY:-}
        https_proxy: ${JENKINS_BUILD_HTTPS_PROXY:-}
        no_proxy: ${JENKINS_BUILD_NO_PROXY:-}
      extra_hosts:
        - "host.docker.internal:${DOCKER_HOST_GATEWAY:-host-gateway}"
    container_name: jenkins
    restart: always
    ports:
      - "${JENKINS_HTTP_PORT:-8080}:8080"
      - "${JENKINS_AGENT_PORT:-50000}:50000"
    volumes:
      # Configuration as Code 配置文件
      - /data/jenkins/casc_configs:/var/jenkins_home/casc_configs:ro
      # 插件预安装列表
      - /data/jenkins/jenkins_home/plugins.txt:/usr/share/jenkins/ref/plugins.txt:ro
      # Jenkins 主目录数据持久化
      - /data/jenkins/jenkins_home:/var/jenkins_home
      # 日志目录
      - app_logs:/data/log/jenkins
      # Docker socket (用于 Docker 构建)
      - /var/run/docker.sock:/var/run/docker.sock:ro
    extra_hosts:
      # 允许容器通过固定主机名访问宿主机 VPN 代理
      - "host.docker.internal:host-gateway"
    environment:
      # Configuration as Code 配置路径
      CASC_JENKINS_CONFIG: /var/jenkins_home/casc_configs/jenkins.yaml
      # Jenkins 启动选项
      JENKINS_OPTS: '${JENKINS_OPTS:-"--httpPort=8080 --logfile=/data/log/jenkins/jenkins.log"}'
      # JVM 选项
      JAVA_OPTS: '${JENKINS_JAVA_OPTS:-"-Djenkins.install.runSetupWizard=false -Xmx1536m -Xms512m"}'
      # VPN 代理配置（通过宿主机转发）
      HTTP_PROXY: '${JENKINS_RUNTIME_HTTP_PROXY:-http://host.docker.internal:7890}'
      HTTPS_PROXY: '${JENKINS_RUNTIME_HTTPS_PROXY:-http://host.docker.internal:7890}'
      http_proxy: '${JENKINS_RUNTIME_HTTP_PROXY:-http://host.docker.internal:7890}'
      https_proxy: '${JENKINS_RUNTIME_HTTPS_PROXY:-http://host.docker.internal:7890}'
      NO_PROXY: '${JENKINS_RUNTIME_NO_PROXY:-localhost,127.0.0.1,::1,jenkins,host.docker.internal}'
      no_proxy: '${JENKINS_RUNTIME_NO_PROXY:-localhost,127.0.0.1,::1,jenkins,host.docker.internal}'
    # 健康检查
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/login || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    # 标签（用于服务发现）
    labels:
      - "app.name=jenkins"
      - "app.version=lts"
      - "app.component=ci-cd"

networks:
  backend:
    external: true
    name: infra-backend

volumes:
  jenkins_data:
    external: true
    name: infra_jenkins_data
  app_logs:
    external: true
    name: infra_app_logs